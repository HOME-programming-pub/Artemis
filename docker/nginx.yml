--- # ----------------------------------------------------------------------------------------------------------------------

# ----------------------------------------------------------------------------------------------------------------------
# Nginx base service
services:
    nginx:
        # nginx setup based on artemis prod ansible repository
        # TODO: merge KIT settings for the proxy
        # TODO: Adjust worker_rlimit_nofile in nginx.conf (from ansible task)
        # TODO: Adjust worker_connections in nginx.conf (from ansible task)
        # TODO: Adjust worker_connections in nginx.conf (from ansible task)
        # TODO: Ensure file-max limit in sysctl.conf (from ansible task)
        # TODO: Copy security-limits nginx.conf (from ansible task)
        # TODO: Copy systemd-limits nginx.conf (from ansible task)
        container_name: artemis-nginx
        image: nginx:1.23
        pull_policy: always
        volumes:
            - ./nginx/timeouts.conf:/etc/nginx/conf.d/timeouts.conf:ro
            - ./nginx/artemis-nginx.conf:/etc/nginx/conf.d/artemis-nginx.conf:ro
            - ./nginx/artemis-server.conf:/etc/nginx/includes/artemis-server.conf:ro
            - ./nginx/gitlab-server.conf:/etc/nginx/includes/gitlab-server.conf:ro
            - ./nginx/dhparam.pem:/etc/nginx/dhparam.pem:ro
            - ./nginx/nginx_502.html:/usr/share/nginx/html/502.html:ro
            - ./nginx/70-artemis-setup.sh:/docker-entrypoint.d/70-artemis-setup.sh
            # TODO: move the certs to a place for testing in cypress and/or development envs
            # - ./nginx/certs/artemis-nginx.pem:/certs/fullchain.pem:ro
            # - ./nginx/certs/artemis-nginx-key.pem:/certs/priv_key.pem:ro
            - /etc/ssl/certs_genh/artemis_hs-merseburg_de.pem:/certs/fullchain.pem:ro
            - /etc/ssl/artemis.hs-merseburg.de-key.pem:/certs/priv_key.pem:ro
            #- ./pki:/etc/pki/nginx:ro
            #- ./defaults/templates:/etc/nginx/templates:ro
            #- ./defaults/nginx.conf:/etc/nginx/nginx.conf:ro
            #- ./defaults/proxy.conf:/etc/nginx/proxy.conf:ro
            #- ./defaults/ssl.conf:/etc/nginx/ssl.conf:ro
            #- ./defaults/dhparam.pem:/etc/nginx/dhparam.pem:ro
        ports:
            - "127.0.0.1:80:80"
            - "127.0.0.1:443:443"
        # expose the port to make it reachable docker internally even if the external port mapping changes
        # expose:
        #     - "80"
        #     - "443"
        healthcheck:
            test: service nginx status || exit 1
            start_period: 60s
        network_mode: bridge
        # networks:
            # artemis:
            #     aliases:
            #         - artemis.hs-merseburg.de
            #         - gitlab.artemis.hs-merseburg.de
        extra_hosts:
            - "gitlab.artemis:172.18.0.2"
            - "gitlab-runner.artemis:172.18.0.3"
            - "mysql.artemis:172.18.0.4"
            - "main.artemis:172.18.0.5"
            - "nginx.artemis:172.18.0.6"

# networks:
#     artemis:
#         driver: bridge
#         name: artemis
