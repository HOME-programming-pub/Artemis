stages:
  - test
  - upload

test-job:
  image: ${ARTEMIS_BUILD_DOCKER_IMAGE}
  stage: test
  only:
    variables:
      - $CI_COMMIT_BRANCH == $ARTEMIS_SUBMISSION_GIT_BRANCH
  allow_failure: true
  variables:
    GIT_STRATEGY: none
    MAVEN_OPTS: -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=[yyyy-MM-dd'T'HH:mm:ssX] -Dorg.slf4j.simpleLogger.logFile=${ARTEMIS_BUILD_LOGS_FILE}
  before_script:
    - apt update
    - apt install -y libxrender1 libxtst6 libxi6
    - git config --global http.sslCAInfo ${CI_SERVER_TLS_CA_FILE}
  script:
    - git clone --branch ${ARTEMIS_TEST_GIT_BRANCH} ${CI_SERVER_PROTOCOL}://${ARTEMIS_TEST_GIT_USER}:${ARTEMIS_TEST_GIT_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/${CI_PROJECT_NAMESPACE}/${ARTEMIS_TEST_GIT_REPOSITORY_SLUG} .
    - git clone --branch ${ARTEMIS_SUBMISSION_GIT_BRANCH} ${CI_SERVER_PROTOCOL}://${ARTEMIS_TEST_GIT_USER}:${ARTEMIS_TEST_GIT_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME} assignment
    - export ARTEMIS_NOTIFICATION_SECRET=[hidden] # Workaround for overwriting the secret
    - export ARTEMIS_TEST_GIT_TOKEN=[hidden]
    - cd assignment
    - mvn clean install -B -DskipTests ${MAVEN_OPTS} && ARTEMIS_BUILD_STATUS="success" || ARTEMIS_BUILD_STATUS="failed"
    - if [ "${ARTEMIS_BUILD_STATUS}" == "failed" ]; then exit 0; else cd ..; fi
    - cd structural
    - mvn clean test -B --fail-at-end && ARTEMIS_BUILD_STATUS="success" || ARTEMIS_BUILD_STATUS="failed"
    - if [ "${ARTEMIS_BUILD_STATUS}" == "failed" ]; then exit 0; else cd ..; fi
    - cd behavior
    - mvn clean test -B --fail-at-end && ARTEMIS_BUILD_STATUS="success" || ARTEMIS_BUILD_STATUS="failed"
  after_script:
    - ARTEMIS_BUILD_STATUS="${ARTEMIS_BUILD_STATUS:-success}" # Workaround for runs without tests

    - echo "ARTEMIS_BUILD_STATUS=${ARTEMIS_BUILD_STATUS}" >> .env
    - echo "ARTEMIS_TEST_GIT_HASH=$(git rev-parse HEAD)" >> .env
    - echo "ARTEMIS_SUBMISSION_GIT_HASH=${CI_COMMIT_SHA}" >> .env
    - echo "ARTEMIS_SUBMISSION_GIT_REPOSITORY_SLUG=${CI_PROJECT_NAME}" >> .env

    - cat assignment/${ARTEMIS_BUILD_LOGS_FILE} >> ${ARTEMIS_BUILD_LOGS_FILE} || true

    - mkdir -p ${ARTEMIS_TEST_RESULTS_DIR}
    - cp structural/target/surefire-reports/*.xml ${ARTEMIS_TEST_RESULTS_DIR} || true
    - cp behavior/target/surefire-reports/*.xml ${ARTEMIS_TEST_RESULTS_DIR} || true
    - sed -i 's/[^[:print:]\t]/ï¿½/g' ${ARTEMIS_TEST_RESULTS_DIR}/*.xml || true
  artifacts:
    paths:
      - ${ARTEMIS_BUILD_LOGS_FILE}
      - ${ARTEMIS_TEST_RESULTS_DIR}
    reports:
      dotenv: .env

upload-job:
  image: ${ARTEMIS_NOTIFICATION_PLUGIN_DOCKER_IMAGE}
  stage: upload
  dependencies:
    - test-job
  only:
    variables:
      - $CI_COMMIT_BRANCH == $ARTEMIS_SUBMISSION_GIT_BRANCH
  variables:
    GIT_STRATEGY: none
  before_script:
    - keytool -import -trustcacerts -storepass changeit -alias root -file ${CI_SERVER_TLS_CA_FILE} -keystore $JAVA_HOME/jre/lib/security/cacerts -noprompt
  script:
    - cp -r /notification-plugin/* .
    - gradle run
